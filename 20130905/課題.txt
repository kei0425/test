■ルール、前提条件
　複数のテキストファイルを含むディレクトリがあります。
　テキストファイルの内容は英文で、文字コードはASCIIです。

　この時、テキストの中に現れる単語について
　１．1文字目がアルファベット大文字、2文字目以降にアルファベット小文字が
　　　1文字以上続く文字列のことを「CamelCase」とする
　２．「CamelCase」が1つ以上続いた文字列を「WikiName」とする
　３．WikiNameの前後が
　　  ・前が半角スペースかピリオドかカンマか行頭かファイル先頭
　　  　後が半角スペースかピリオドかカンマか行末かファイル末
　　  ・または前後を"で括られているか
　　  ・または前後を'で括られているか
　　  のいずれかの条件を満たす場合、その文字列を「WikiLink」とする

　４．「WikiLink」は、「WikiLink」の文字列+".txt"をファイル名にもつ
　　　ファイルへのリンクを意味するものとする。
　
　テキストファイルは、1ファイルあたり10kb以下であるとし
　実行環境上で、1つの文字列として扱うことが可能であるとします。
　また、ファイルの総数も、1000ファイル以下とします。
　
　ファイルの途中にnull文字（\0）が含まれていても、
　有効なファイル領域として先まで読み進めてください。
　
　サンプルファイルをいくつか用意しました。
　たとえばファイル「Perl.txt」に含まれるWikiLinkはLarry,Perl,Since,Unix,Wallの5種類です。
　
■仕様概要
  
  あるテキストから、「WikiLink」をたどって行った際に
  目的のテキストへの最短のリンク経路を見つけるプログラムを作成してください。
  同一のステップ数の経路が複数ある場合、アルファベット順の昇順で
  近い方を表示してください。

■仕様詳細
  ①複数のテキストファイルが含まれているディレクトリと
  ②検索の開始元となるWikiName
  ③検索対象となるWikiName
  の3つの要素を引数に取って
  ②のWikiNameから③のWikiNameまでの
  最短でのリンクステップを標準出力にPrintする。
  
  
  あくまでこのように表示するという意味で、例を以下に挙げます。
  添付のテストデータとは連動しておらず、
  列挙した各文字列自体に具体的な意味はありません。
  ○が、期待される戻り値です。
  
-----------------------------------
  例１：②＝Perl, ③=Ruby
  ○　Perl->Ruby
  
-----------------------------------
  例２：②＝Perl, ③=VisualBasic
  ×　Perl->Windows->VisualStudio->VisualBasic
  ○　Perl->ProgrammingLanguage->VisualBasic
  
  ×は、リンクはされているが最短ではない例です。

-----------------------------------
  例３：②＝Perl, ③=SmallTalk
  ×　Perl->Python->SmallTalk
  ○　Perl->Lisp->SmallTalk
  
  ×は、最短ステップですが、2ステップ目の昇順ソートで劣っています。
  
-----------------------------------
  例４：②＝Perl, ③=Postgres
  ○　Postgres is not found from Perl.
  
  全てのリンクを網羅してもたどり着けない場合
  上記のように「not found」と表示してください。
  
-----------------------------------
  例５：②＝Perl, ③=Python
  ○　Python is found ,but file doesn't exist. Perl->Python
  
  WikiLinkにたどり着けたのに、最後のリンク先のテキストが
  存在しない場合、上記のように「not exists」と表示した上で
  最短ステップを表示してください。

-----------------------------------
 
 
■引数仕様
　search_wiki_distance.pl directory_path start_wikiname search_wikiname
　
